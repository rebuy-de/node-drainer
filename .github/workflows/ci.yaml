name: Golang

on:
  push:
    branches: [master]
  pull_request:
    types: [opened, reopened, synchronize]
  release:
    types: [published]
  schedule:
  - cron: '15 3 * * 0'

jobs:
  container_build:
    runs-on: ubuntu-22.04
    name: Container Build

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Build project
      shell: bash
      run: |
        docker run --rm \
          -e CGO_ENABLED=0 \
          -v $(pwd):/project \
          -w /project \
          --entrypoint /bin/sh \
          golang:1.19-alpine \
          -c "apk add git openssl && \
            ./buildutil -v \
              -x linux/amd64 -x linux/arm64"

    - name: Generate image tags for releaes
      if: ${{ github.event_name == 'release' }}
      shell: bash
      run: echo "##[set-output name=tags;]quay.io/rebuy/node-drainer:${GITHUB_REF#refs/tags/},074509403805.dkr.ecr.eu-west-1.amazonaws.com/node-drainer:${GITHUB_REF#refs/tags/}"
      id: generate_tags_release

    - name: Generate image tags for PRs
      if: ${{ github.event_name != 'release' }}
      shell: bash
      run: |
        if [ "${GITHUB_EVENT_NAME}" == "pull_request" ]; then
          BRANCH="$(echo ${GITHUB_HEAD_REF} | tr '/' '_')"
          echo "##[set-output name=tags;]quay.io/rebuy/node-drainer:${BRANCH},074509403805.dkr.ecr.eu-west-1.amazonaws.com/node-drainer:${BRANCH}"
        else
          echo "##[set-output name=tags;]quay.io/rebuy/node-drainer:master,074509403805.dkr.ecr.eu-west-1.amazonaws.com/node-drainer:master,\
            quay.io/rebuy/node-drainer:latest,074509403805.dkr.ecr.eu-west-1.amazonaws.com/node-drainer:latest"
        fi
      id: generate_tags_pr

    - name: Set up QEMU
      if: ${{ github.event_name == 'release' }}
      id: qemu
      uses: docker/setup-qemu-action@v2
      with:
        platforms: arm64

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        install: true

    # Only used to prevent rate limits
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Login to ECR
      uses: docker/login-action@v2
      with:
        registry: 074509403805.dkr.ecr.eu-west-1.amazonaws.com
        username: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
        password: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}

    - name: Login to Quay.io
      uses: docker/login-action@v2
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        dockerfile: Dockerfile.multi
        tags: ${{ steps.generate_tags_release.outputs.tags }}
        platforms: linux/amd64,linux/arm64
